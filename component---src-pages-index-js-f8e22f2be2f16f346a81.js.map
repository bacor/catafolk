{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./node_modules/react-bootstrap/esm/CardColumns.js","webpack:///./src/components/dataset-card.js","webpack:///./src/pages/index.js","webpack:///./src/components/tag-list.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","createWithBsPrefix","DatasetCard","dataset","Card","key","dataset_id","Body","Title","title","_","startCase","source","description","tags","length","to","fields","slug","data","Container","Row","Jumbotron","style","maxWidth","CardColumns","allDataset","edges","map","node","bg","text","Text","total","totalCount","query","TagPill","children","TagList","tag"],"mappings":"6FAAA,kFAQIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKO,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQ,YAA8BT,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFU,EAAS,YAAmBR,EAAU,SAC1C,OAAO,IAAMS,cAAcH,EAAW,YAAS,CAC7CP,IAAKA,GACJQ,EAAO,CACRJ,UAAW,IAAWA,EAAWK,EAAQN,GAAQM,EAAS,QAASP,GAAWO,EAAS,IAAMP,SAGjGL,EAAMc,YAAc,QACpBd,EAAMe,aApBa,CACjBT,MAAM,GAoBO,O,2HCzBA,SAAAU,EAAA,GAAmB,gB,iFCwBnBC,MAjBf,YAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,kBAACC,EAAA,EAAD,CAAMC,IAAKF,EAAQG,YACjB,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,KAAaL,EAAQM,OAASC,IAAEC,UAAUR,EAAQG,aAClD,kBAAC,IAAD,CAAUM,OAAQT,EAAQU,YAAarB,UAAU,cAE/CW,EAAQW,KAAKC,OAAS,EAClB,kBAAC,IAAD,CAASD,KAAMX,EAAQW,KAAMtB,UAAU,SACvC,KAEN,kBAAC,IAAD,CAAMwB,GAAE,IAAMb,EAAQc,OAAOC,KAAQ1B,UAAU,gBAA/C,QAAoEW,EAAQG,eCnBpF,sCAWe,sBAAe,IAAZa,EAAW,EAAXA,KAChB,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAW5B,UAAU,QACnB,kBAAC6B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW9B,UAAU,SACnB,yBAAM+B,MAAO,CAAEC,SAAU,UACvB,wBAAIhC,UAAU,aAAd,YACA,uBAAGA,UAAU,QAAb,wEAGA,wBAAIA,UAAU,SACd,uMAON,kBAAC6B,EAAA,EAAD,CAAK7B,UAAU,QACb,kBAACiC,EAAD,KACGN,EAAKO,WAAWC,MAAMC,KAAI,SAAAC,GAAI,OAC7B,kBAAC,EAAD,CAAa1B,QAAS0B,EAAK1B,QAASE,IAAKwB,EAAK1B,QAAQG,gBAExD,kBAACF,EAAA,EAAD,CAAM0B,GAAG,OAAOC,KAAK,SACnB,kBAAC3B,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAK4B,KAAN,oCAC+Bb,EAAKc,MAAMC,WAD1C,aAEE,kBAAC,IAAD,CAAMlB,GAAG,aAAaxB,UAAU,sBAAhC,6BA7BH,IAwCF2C,EAAK,c,+PChDlB,SAASC,EAAT,GAA0C,IAAvBC,EAAsB,EAAtBA,SAAazC,EAAS,kBACvC,OAAO,kBAAC,IAAD,eAAOL,MAAI,GAAKK,GAAQyC,GAalBC,IAVf,YAA+C,IAA5BxB,EAA2B,EAA3BA,KAAMxB,EAAqB,EAArBA,QAAYM,EAAS,wBAC5C,OACE,wBAASA,EACNkB,EAAKc,KAAI,SAAAW,GAAG,OACX,kBAACH,EAAD,CAAS9C,QAASA,GAAW,QAASE,UAAU,OAAOa,IAAKkC,GAAMA","file":"component---src-pages-index-js-f8e22f2be2f16f346a81.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-columns');","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport _ from 'lodash';\nimport Markdown from 'react-markdown'\n\nimport Card from 'react-bootstrap/Card';\nimport TagList from \"../components/tag-list\"\n\nfunction DatasetCard({ dataset }) {\n  return (\n    <Card key={dataset.dataset_id}>\n      <Card.Body>\n        <Card.Title>{dataset.title || _.startCase(dataset.dataset_id)}</Card.Title>\n        <Markdown source={dataset.description} className=\"card-text\" />\n        {\n          dataset.tags.length > 0 \n            ? <TagList tags={dataset.tags} className=\"mb-3\" />\n            : null\n        }\n        <Link to={`/${dataset.fields.slug}`} className=\"btn btn-dark\">View {dataset.dataset_id}</Link>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default DatasetCard;","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport _ from 'lodash';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Layout from \"../components/layout\"\nimport DatasetCard from \"../components/dataset-card\";\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <Container className=\"mt-5\">\n        <Row>\n          <Jumbotron className=\"w-100\">\n            <div  style={{ maxWidth: '700px' }}>\n              <h1 className=\"display-4\">Catafolk</h1>\n              <p className=\"lead\">\n                A catalogue of folk music datasets for computational ethnomusicology\n              </p>\n              <hr className=\"my-4\" />\n              <p>\n                The project hopes to make datasets of folk music more easily accessible. \n                It provides a reference of datasets, but also aims to include some basic automatic analyses.\n              </p>\n            </div> \n          </Jumbotron>\n        </Row>\n        <Row className=\"mt-4\">\n          <CardColumns>\n            {data.allDataset.edges.map(node => (\n              <DatasetCard dataset={node.dataset} key={node.dataset.dataset_id} />\n            ))}\n            <Card bg=\"dark\" text=\"light\">\n              <Card.Body>\n                <Card.Title>And more...</Card.Title>\n                <Card.Text>\n                  Catafolk currently contains {data.total.totalCount} datasets.\n                  <Link to=\"/datasets/\" className=\"btn btn-light mt-3\">View all datasets</Link>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </CardColumns>\n        </Row> \n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`{\n  allDataset(filter: {dataset_id: {in: [\n    \"finnish-folk-tunes\",\n    \"essen-deutschl-erk\",\n    \"densmore-teton-sioux\",\n    \"densmore-ojibway\",\n    \"sagrillo-lorraine\",\n    \"sagrillo-luxembourg\",\n    \"creighton-nova-scotia\",\n    \"natural-history-of-song\"\n  ]}}) {\n    edges {\n      dataset: node {\n        dataset_id\n        description\n        fields {\n          slug\n        }\n        title\n        tags\n      }\n    }\n  }\n  total: allDataset {\n    totalCount\n  }\n}`\n","import React from \"react\"\nimport Badge from 'react-bootstrap/Badge';\n\nfunction TagPill({ children, ...props }) {\n  return <Badge pill {...props}>{children}</Badge>\n}\n\nfunction TagList({ tags, variant, ...props }) {\n  return (\n    <div {...props}>\n      {tags.map(tag => (\n        <TagPill variant={variant || \"light\"} className=\"mr-2\" key={tag}>{tag}</TagPill>\n      ))}\n    </div>\n  )\n}\n\nexport default TagList;"],"sourceRoot":""}