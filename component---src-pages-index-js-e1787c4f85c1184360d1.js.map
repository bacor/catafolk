{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./node_modules/react-bootstrap/esm/CardColumns.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/components/dataset-card.js","webpack:///./src/pages/index.js","webpack:///./src/components/tag-list.js","webpack:///./node_modules/react-bootstrap/esm/Jumbotron.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","createWithBsPrefix","Row","noGutters","_props$as","otherProps","decoratedBsPrefix","DatasetCard","dataset","Card","key","dataset_id","Body","Title","title","_","startCase","Text","description","tags","length","to","fields","slug","data","Jumbotron","style","maxWidth","class","CardColumns","allDataset","edges","map","node","bg","text","totalCount","query","TagPill","children","TagList","tag","_classes","fluid","classes"],"mappings":"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","file":"component---src-pages-index-js-e1787c4f85c1184360d1.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-columns');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport _ from 'lodash';\n\nimport Card from 'react-bootstrap/Card';\nimport TagList from \"../components/tag-list\"\n\nfunction DatasetCard({ dataset }) {\n  return (\n    <Card key={dataset.dataset_id}>\n      <Card.Body>\n        <Card.Title>{dataset.title || _.startCase(dataset.dataset_id)}</Card.Title>\n        <Card.Text>{dataset.description}</Card.Text>\n        {\n          dataset.tags.length > 0 \n            ? <TagList tags={dataset.tags} className=\"mb-3\" />\n            : null\n        }\n        <Link to={dataset.fields.slug} className=\"btn btn-dark\">View {dataset.dataset_id}</Link>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default DatasetCard;","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport _ from 'lodash';\n\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport Row from 'react-bootstrap/Row';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport Layout from \"../components/layout\"\nimport DatasetCard from \"../components/dataset-card\";\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <Row>\n        <Jumbotron className=\"w-100\">\n          <div  style={{ maxWidth: '700px' }}>\n            <h1 class=\"display-4\">Catafolk</h1>\n            <p className=\"lead\">\n              A catalogue of folk music datasets for computational ethnomusicology\n            </p>\n            <hr class=\"my-4\" />\n            <p>\n              The project hopes to make datasets of folk music more easily accessible. \n              It provides a reference of datasets, but also aims to include some basic automatic analyses.\n            </p>\n          </div> \n        </Jumbotron>\n      </Row>\n      <Row className=\"mt-5\">\n        <CardColumns>\n          {data.allDataset.edges.map(node => (\n            <DatasetCard dataset={node.dataset} />\n          ))}\n          <Card bg=\"dark\" text=\"light\">\n            <Card.Body>\n              <Card.Title>And more...</Card.Title>\n              <Card.Text>\n                <p>Catafolk currently contains {data.allDataset.totalCount} datasets.</p>\n                <Link to=\"/datasets/\" class=\"btn btn-light\">View all datasets</Link>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </CardColumns>\n      </Row> \n    </Layout>\n  )\n}\n\nexport const query = graphql`{\n  allDataset {\n    totalCount\n    edges {\n      dataset: node {\n        dataset_id\n        description\n        fields {\n          slug\n        }\n        title\n        tags\n      }\n    }\n  }\n}`\n","import React from \"react\"\nimport Badge from 'react-bootstrap/Badge';\n\nfunction TagPill({ children, ...props }) {\n  return <Badge pill {...props}>{children}</Badge>\n}\n\nfunction TagList({ tags, variant, ...props }) {\n  return (\n    <div {...props}>\n      {tags.map(tag => (\n        <TagPill variant={variant || \"light\"} className=\"mr-2\">{tag}</TagPill>\n      ))}\n    </div>\n  )\n}\n\nexport default TagList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"fluid\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;"],"sourceRoot":""}